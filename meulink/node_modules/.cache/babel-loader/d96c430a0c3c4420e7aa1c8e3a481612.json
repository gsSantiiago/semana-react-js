{"ast":null,"code":"// Buscar os links salvos.\nexport async function getLinkSave(key) {\n  const myLinks = await localStorage.getItem(key);\n  let linksSaves = JSON.parse(myLinks) || [];\n  return linksSaves;\n} // Salvar um link no localStorage.\n\nexport async function saveLink(key, newLink) {\n  let linksStored = await getLinkSave(key);\n  const hasLink = linksStored.some(link => link.id === newLink.id);\n\n  if (hasLink) {\n    console.log('ESSE LINK JÁ EXISTE NA SUA LISTA!');\n    return;\n  }\n\n  linksStored.push(newLink);\n  await localStorage.setItem(key, JSON.stringify(linksStored));\n  console.log('LINK SALVO COM SUCESSO!');\n} // Deletar algum link salvo.\n\nexport function deleteLink(links, id) {\n  let myLinks = links.filter(item => {\n    return item.id !== id;\n  });\n  localStorage.setItem('@encurtarLink', JSON.stringify(myLinks));\n  console.log(\"LINK DELETADO COM SUCESSO!\");\n  return myLinks;\n}","map":{"version":3,"sources":["/Users/guilherme/Projects/semana-react-js/meulink/src/services/storeLinks.js"],"names":["getLinkSave","key","myLinks","localStorage","getItem","linksSaves","JSON","parse","saveLink","newLink","linksStored","hasLink","some","link","id","console","log","push","setItem","stringify","deleteLink","links","filter","item"],"mappings":"AACA;AACA,OAAO,eAAeA,WAAf,CAA2BC,GAA3B,EAAgC;AACnC,QAAMC,OAAO,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,GAArB,CAAtB;AAEA,MAAII,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAX,KAAuB,EAAxC;AAEA,SAAOG,UAAP;AACH,C,CAED;;AACA,OAAO,eAAeG,QAAf,CAAwBP,GAAxB,EAA6BQ,OAA7B,EAAsC;AACzC,MAAIC,WAAW,GAAG,MAAMV,WAAW,CAACC,GAAD,CAAnC;AAEA,QAAMU,OAAO,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAAhB;;AAEA,MAAIH,OAAJ,EAAa;AACTI,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA;AACH;;AAEDN,EAAAA,WAAW,CAACO,IAAZ,CAAiBR,OAAjB;AACA,QAAMN,YAAY,CAACe,OAAb,CAAqBjB,GAArB,EAA0BK,IAAI,CAACa,SAAL,CAAeT,WAAf,CAA1B,CAAN;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,C,CAED;;AACA,OAAO,SAASI,UAAT,CAAoBC,KAApB,EAA2BP,EAA3B,EAA+B;AAElC,MAAIZ,OAAO,GAAGmB,KAAK,CAACC,MAAN,CAAaC,IAAI,IAAI;AAC/B,WAAQA,IAAI,CAACT,EAAL,KAAYA,EAApB;AACH,GAFa,CAAd;AAIAX,EAAAA,YAAY,CAACe,OAAb,CAAqB,eAArB,EAAsCZ,IAAI,CAACa,SAAL,CAAejB,OAAf,CAAtC;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAEA,SAAOd,OAAP;AACH","sourcesContent":["\n// Buscar os links salvos.\nexport async function getLinkSave(key) {\n    const myLinks = await localStorage.getItem(key);\n\n    let linksSaves = JSON.parse(myLinks) || [];\n\n    return linksSaves;\n}\n\n// Salvar um link no localStorage.\nexport async function saveLink(key, newLink) {\n    let linksStored = await getLinkSave(key);\n\n    const hasLink = linksStored.some(link => link.id === newLink.id)\n\n    if (hasLink) {\n        console.log('ESSE LINK JÁ EXISTE NA SUA LISTA!')\n        return;\n    }\n\n    linksStored.push(newLink)\n    await localStorage.setItem(key, JSON.stringify(linksStored))\n    console.log('LINK SALVO COM SUCESSO!')\n}\n\n// Deletar algum link salvo.\nexport function deleteLink(links, id) {\n\n    let myLinks = links.filter(item => {\n        return (item.id !== id)\n    })\n\n    localStorage.setItem('@encurtarLink', JSON.stringify(myLinks));\n    console.log(\"LINK DELETADO COM SUCESSO!\")\n\n    return myLinks;\n}"]},"metadata":{},"sourceType":"module"}